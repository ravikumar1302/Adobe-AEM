BASIC JavaScript THEORY :
JavaScript was first proposed by =

Main Topics : Clousers, Prototype, Event Loop, Async Await, 

0. file Extension : file_name.js
0.1 JS is Case-Sensetive
0.2 DEFINATIONS
    JS is a High level, just in time compiled programming language (means it compiles at run time, unlike java you don't have to first compile and then run it)
    JS is a lightweight, interpreted, object-oriented language with first-class functions, and is best known as the scripting language for Web pages, but it's used in many non-browser environments as well. 
    It is a prototype-based, multi-paradigm scripting language that is dynamic, and supports object-oriented, imperative, and functional programming styles.
    JS runs on browsers and servers(NodeJS) or JS run on the client side of the web, which can be used to design / program how the web pages behave on the occurrence of an event. JS is an easy to learn and also powerful scripting language, widely used for controlling web page behavior.
    It has application programming interfaces (APIs) for working with text, dates, regular expressions, standard data structures, and the Document Object Model (DOM).

1. Everything in JS happens inside an Execution Context. It is like a big box that contains 2 things :
    a) Memory or Variable environment (Stores variable and functions as a key : value pair)
    b) Code or Thread of execution (means the coding part)

2. Memory portion of Execution Context is creates as soon as you start writing variables and functions. While the code portion while you run the code
    E.g., 
        var n=2;
        function sqaure(num)    {
            var ans = num*num;
            return ans;
        }
        var square2 = square(n);
        var square4 = square(4);

    The memoroy portion stores like this :
        a) for variable like n, square2, variable name with special value : undefined is stored : (n : undefined)
        b) for functions the whole code is stored :(square : and the whole code)
    When the 2nd phase, Execution phase starts,
        a) For variable :the undefined value gets replaced by the value given by user. In the above code the n : undefined will become n : 2, in the execustion phase
        b) For function : whenever a function is invoked, a nested Execution Context Box is created within code section of existing or main or Global Execution Context Box and calculations are done, and when return statement is reached, that nested Execution Context Box ends. After the whole program is done, the main or Global Execution Context Box is also deleted
            This is why, Functions are also called as "Heart of JS"
        c) JS manages this Global and nested functions Execution Context Box using Call Stack. Call Stack maintains the order of execution contexts, so Firstly global Execution Context is entered and then nested functions Execution Context
        d) Call stack has various names : Call Stack, Execution Context Stack, Program Stack, Control Stack, Runtime Stack, Machine Stack.

3. JS is a Synchronous, Single threaded language
    Synchronous : executes in a specific order, means firstly the first line and then the second and so on
    Single threaded : executes one command at a time like interpreter

4. React is a JS library
5. JS Appliactions
    - Web/ Mobile Apps
    - Real Time Applications
    - Desktop/ Command line tools
    - Games Development

6. JS is run by JS engine on browsers. Like V8 engine on chrome, Spider monkey on mozilla.
    Also, Nodejs is a JS reuntime build on Chrome V8 JS engine for executing JS outside browser

7. <script> tag is used inside HTML document to use JS. But it is recommended to make a separate file and then link it using src attribute in script tag.